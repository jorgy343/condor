//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Casm.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Casm.Antlr {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class CasmLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, LABEL=2, REGISTERREFERENCE=3, REGISTER=4, DIRECTIVE=5, COMMENT=6, 
		NAME=7, NUMBER=8, HEXNUMBER=9, DECIMALNUMBER=10, BINARYNUMBER=11, EOL=12, 
		WS=13;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "LABEL", "REGISTERREFERENCE", "REGISTER", "DIRECTIVE", "COMMENT", 
		"NAME", "NUMBER", "HEXNUMBER", "DECIMALNUMBER", "BINARYNUMBER", "EOL", 
		"WS"
	};


	public CasmLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CasmLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "','"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, "LABEL", "REGISTERREFERENCE", "REGISTER", "DIRECTIVE", "COMMENT", 
		"NAME", "NUMBER", "HEXNUMBER", "DECIMALNUMBER", "BINARYNUMBER", "EOL", 
		"WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Casm.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static CasmLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\xF', '\x7F', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x5', '\x5', '+', '\n', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', 
		'\a', '\a', '\x32', '\n', '\a', '\f', '\a', '\xE', '\a', '\x35', '\v', 
		'\a', '\x3', '\b', '\x3', '\b', '\a', '\b', '\x39', '\n', '\b', '\f', 
		'\b', '\xE', '\b', '<', '\v', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\t', 
		'\x5', '\t', '\x41', '\n', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', 
		'\a', '\n', '\x46', '\n', '\n', '\f', '\n', '\xE', '\n', 'I', '\v', '\n', 
		'\x3', '\n', '\x3', '\n', '\a', '\n', 'M', '\n', '\n', '\f', '\n', '\xE', 
		'\n', 'P', '\v', '\n', '\x3', '\v', '\x6', '\v', 'S', '\n', '\v', '\r', 
		'\v', '\xE', '\v', 'T', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\a', '\v', 
		'Z', '\n', '\v', '\f', '\v', '\xE', '\v', ']', '\v', '\v', '\x3', '\v', 
		'\x3', '\v', '\a', '\v', '\x61', '\n', '\v', '\f', '\v', '\xE', '\v', 
		'\x64', '\v', '\v', '\x5', '\v', '\x66', '\n', '\v', '\x3', '\f', '\x3', 
		'\f', '\x3', '\f', '\a', '\f', 'k', '\n', '\f', '\f', '\f', '\xE', '\f', 
		'n', '\v', '\f', '\x3', '\f', '\x3', '\f', '\a', '\f', 'r', '\n', '\f', 
		'\f', '\f', '\xE', '\f', 'u', '\v', '\f', '\x3', '\r', '\x5', '\r', 'x', 
		'\n', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', 
		'\xE', '\x3', '\xE', '\x2', '\x2', '\xF', '\x3', '\x3', '\x5', '\x4', 
		'\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', 
		'\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', 
		'\xF', '\x3', '\x2', '\x13', '\x4', '\x2', 'T', 'T', 't', 't', '\x3', 
		'\x2', '\x33', '\x33', '\x3', '\x2', '\x32', '\x37', '\x3', '\x2', '\x32', 
		';', '\x4', '\x2', '\f', '\f', '\xF', '\xF', '\x5', '\x2', '\x43', '\\', 
		'\x61', '\x61', '\x63', '|', '\x6', '\x2', '\x32', ';', '\x43', '\\', 
		'\x61', '\x61', '\x63', '|', '\x4', '\x2', 'Z', 'Z', 'z', 'z', '\x3', 
		'\x2', '\x61', '\x61', '\x5', '\x2', '\x32', ';', '\x43', 'H', '\x63', 
		'h', '\x6', '\x2', '\x32', ';', '\x43', 'H', '\x61', '\x61', '\x63', 'h', 
		'\x4', '\x2', '\x46', '\x46', '\x66', '\x66', '\x4', '\x2', '\x32', ';', 
		'\x61', '\x61', '\x4', '\x2', '\x44', '\x44', '\x64', '\x64', '\x3', '\x2', 
		'\x32', '\x33', '\x4', '\x2', '\x32', '\x33', '\x61', '\x61', '\x4', '\x2', 
		'\v', '\v', '\"', '\"', '\x2', '\x8C', '\x2', '\x3', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x5', '\x1F', '\x3', '\x2', 
		'\x2', '\x2', '\a', '\"', '\x3', '\x2', '\x2', '\x2', '\t', '&', '\x3', 
		'\x2', '\x2', '\x2', '\v', ',', '\x3', '\x2', '\x2', '\x2', '\r', '/', 
		'\x3', '\x2', '\x2', '\x2', '\xF', '\x36', '\x3', '\x2', '\x2', '\x2', 
		'\x11', '@', '\x3', '\x2', '\x2', '\x2', '\x13', '\x42', '\x3', '\x2', 
		'\x2', '\x2', '\x15', '\x65', '\x3', '\x2', '\x2', '\x2', '\x17', 'g', 
		'\x3', '\x2', '\x2', '\x2', '\x19', 'w', '\x3', '\x2', '\x2', '\x2', '\x1B', 
		'{', '\x3', '\x2', '\x2', '\x2', '\x1D', '\x1E', '\a', '.', '\x2', '\x2', 
		'\x1E', '\x4', '\x3', '\x2', '\x2', '\x2', '\x1F', ' ', '\x5', '\xF', 
		'\b', '\x2', ' ', '!', '\a', '<', '\x2', '\x2', '!', '\x6', '\x3', '\x2', 
		'\x2', '\x2', '\"', '#', '\a', ']', '\x2', '\x2', '#', '$', '\x5', '\t', 
		'\x5', '\x2', '$', '%', '\a', '_', '\x2', '\x2', '%', '\b', '\x3', '\x2', 
		'\x2', '\x2', '&', '*', '\t', '\x2', '\x2', '\x2', '\'', '(', '\t', '\x3', 
		'\x2', '\x2', '(', '+', '\t', '\x4', '\x2', '\x2', ')', '+', '\t', '\x5', 
		'\x2', '\x2', '*', '\'', '\x3', '\x2', '\x2', '\x2', '*', ')', '\x3', 
		'\x2', '\x2', '\x2', '+', '\n', '\x3', '\x2', '\x2', '\x2', ',', '-', 
		'\a', '\x42', '\x2', '\x2', '-', '.', '\x5', '\xF', '\b', '\x2', '.', 
		'\f', '\x3', '\x2', '\x2', '\x2', '/', '\x33', '\a', '=', '\x2', '\x2', 
		'\x30', '\x32', '\n', '\x6', '\x2', '\x2', '\x31', '\x30', '\x3', '\x2', 
		'\x2', '\x2', '\x32', '\x35', '\x3', '\x2', '\x2', '\x2', '\x33', '\x31', 
		'\x3', '\x2', '\x2', '\x2', '\x33', '\x34', '\x3', '\x2', '\x2', '\x2', 
		'\x34', '\xE', '\x3', '\x2', '\x2', '\x2', '\x35', '\x33', '\x3', '\x2', 
		'\x2', '\x2', '\x36', ':', '\t', '\a', '\x2', '\x2', '\x37', '\x39', '\t', 
		'\b', '\x2', '\x2', '\x38', '\x37', '\x3', '\x2', '\x2', '\x2', '\x39', 
		'<', '\x3', '\x2', '\x2', '\x2', ':', '\x38', '\x3', '\x2', '\x2', '\x2', 
		':', ';', '\x3', '\x2', '\x2', '\x2', ';', '\x10', '\x3', '\x2', '\x2', 
		'\x2', '<', ':', '\x3', '\x2', '\x2', '\x2', '=', '\x41', '\x5', '\x13', 
		'\n', '\x2', '>', '\x41', '\x5', '\x15', '\v', '\x2', '?', '\x41', '\x5', 
		'\x17', '\f', '\x2', '@', '=', '\x3', '\x2', '\x2', '\x2', '@', '>', '\x3', 
		'\x2', '\x2', '\x2', '@', '?', '\x3', '\x2', '\x2', '\x2', '\x41', '\x12', 
		'\x3', '\x2', '\x2', '\x2', '\x42', '\x43', '\a', '\x32', '\x2', '\x2', 
		'\x43', 'G', '\t', '\t', '\x2', '\x2', '\x44', '\x46', '\t', '\n', '\x2', 
		'\x2', '\x45', '\x44', '\x3', '\x2', '\x2', '\x2', '\x46', 'I', '\x3', 
		'\x2', '\x2', '\x2', 'G', '\x45', '\x3', '\x2', '\x2', '\x2', 'G', 'H', 
		'\x3', '\x2', '\x2', '\x2', 'H', 'J', '\x3', '\x2', '\x2', '\x2', 'I', 
		'G', '\x3', '\x2', '\x2', '\x2', 'J', 'N', '\t', '\v', '\x2', '\x2', 'K', 
		'M', '\t', '\f', '\x2', '\x2', 'L', 'K', '\x3', '\x2', '\x2', '\x2', 'M', 
		'P', '\x3', '\x2', '\x2', '\x2', 'N', 'L', '\x3', '\x2', '\x2', '\x2', 
		'N', 'O', '\x3', '\x2', '\x2', '\x2', 'O', '\x14', '\x3', '\x2', '\x2', 
		'\x2', 'P', 'N', '\x3', '\x2', '\x2', '\x2', 'Q', 'S', '\t', '\x5', '\x2', 
		'\x2', 'R', 'Q', '\x3', '\x2', '\x2', '\x2', 'S', 'T', '\x3', '\x2', '\x2', 
		'\x2', 'T', 'R', '\x3', '\x2', '\x2', '\x2', 'T', 'U', '\x3', '\x2', '\x2', 
		'\x2', 'U', '\x66', '\x3', '\x2', '\x2', '\x2', 'V', 'W', '\a', '\x32', 
		'\x2', '\x2', 'W', '[', '\t', '\r', '\x2', '\x2', 'X', 'Z', '\t', '\n', 
		'\x2', '\x2', 'Y', 'X', '\x3', '\x2', '\x2', '\x2', 'Z', ']', '\x3', '\x2', 
		'\x2', '\x2', '[', 'Y', '\x3', '\x2', '\x2', '\x2', '[', '\\', '\x3', 
		'\x2', '\x2', '\x2', '\\', '^', '\x3', '\x2', '\x2', '\x2', ']', '[', 
		'\x3', '\x2', '\x2', '\x2', '^', '\x62', '\t', '\x5', '\x2', '\x2', '_', 
		'\x61', '\t', '\xE', '\x2', '\x2', '`', '_', '\x3', '\x2', '\x2', '\x2', 
		'\x61', '\x64', '\x3', '\x2', '\x2', '\x2', '\x62', '`', '\x3', '\x2', 
		'\x2', '\x2', '\x62', '\x63', '\x3', '\x2', '\x2', '\x2', '\x63', '\x66', 
		'\x3', '\x2', '\x2', '\x2', '\x64', '\x62', '\x3', '\x2', '\x2', '\x2', 
		'\x65', 'R', '\x3', '\x2', '\x2', '\x2', '\x65', 'V', '\x3', '\x2', '\x2', 
		'\x2', '\x66', '\x16', '\x3', '\x2', '\x2', '\x2', 'g', 'h', '\a', '\x32', 
		'\x2', '\x2', 'h', 'l', '\t', '\xF', '\x2', '\x2', 'i', 'k', '\t', '\n', 
		'\x2', '\x2', 'j', 'i', '\x3', '\x2', '\x2', '\x2', 'k', 'n', '\x3', '\x2', 
		'\x2', '\x2', 'l', 'j', '\x3', '\x2', '\x2', '\x2', 'l', 'm', '\x3', '\x2', 
		'\x2', '\x2', 'm', 'o', '\x3', '\x2', '\x2', '\x2', 'n', 'l', '\x3', '\x2', 
		'\x2', '\x2', 'o', 's', '\t', '\x10', '\x2', '\x2', 'p', 'r', '\t', '\x11', 
		'\x2', '\x2', 'q', 'p', '\x3', '\x2', '\x2', '\x2', 'r', 'u', '\x3', '\x2', 
		'\x2', '\x2', 's', 'q', '\x3', '\x2', '\x2', '\x2', 's', 't', '\x3', '\x2', 
		'\x2', '\x2', 't', '\x18', '\x3', '\x2', '\x2', '\x2', 'u', 's', '\x3', 
		'\x2', '\x2', '\x2', 'v', 'x', '\a', '\xF', '\x2', '\x2', 'w', 'v', '\x3', 
		'\x2', '\x2', '\x2', 'w', 'x', '\x3', '\x2', '\x2', '\x2', 'x', 'y', '\x3', 
		'\x2', '\x2', '\x2', 'y', 'z', '\a', '\f', '\x2', '\x2', 'z', '\x1A', 
		'\x3', '\x2', '\x2', '\x2', '{', '|', '\t', '\x12', '\x2', '\x2', '|', 
		'}', '\x3', '\x2', '\x2', '\x2', '}', '~', '\b', '\xE', '\x2', '\x2', 
		'~', '\x1C', '\x3', '\x2', '\x2', '\x2', '\x10', '\x2', '*', '\x33', ':', 
		'@', 'G', 'N', 'T', '[', '\x62', '\x65', 'l', 's', 'w', '\x3', '\b', '\x2', 
		'\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Casm.Antlr
